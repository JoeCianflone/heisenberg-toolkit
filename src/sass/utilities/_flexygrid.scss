$fopts: (
   wrap:            wrap,
   columns:         12,
   direction:       row,
   align-items:     flex-start,
   align-content:   center,
   justify-content: space-between,
   gutter-position: split,
   gutters:         0.25,
   order:           0,
   flex-grow:       0,
   flex-shrink:     1,
   align-self:      auto,
) !global;

$directionMap: (
  row: "row",
  column: "column",
  row-reverse: "row-reverse",
  column-reverse: "column-reverse",
);

$wrapMap: (
  wrap: "wrap",
  nowrap: "nowrap",
  wrap-reverse: "wrap-reverse",
);

$justifyMap: (
  end:     "flex-end",
  start:   "flex-start",
  around:  "space-around",
  center:  "center",
  between: "space-between",
);

$alignMap: (
  top:      "flex-start",
  fill:     "stretch",
  middle:   "center",
  bottom:   "flex-end",
  baseline: "baseline",
);

// is this needed?
$contentMap: (
  content-top:     "flex-start",
  content-fill:    "stretch",
  content-middle:  "center",
  content-bottom:  "flex-end",
  content-around:  "space-around",
  content-between: "space-between",
);



@mixin flexygrid-settings($overrides: ()) {
   $fopts: map-merge($fopts, $overrides);
}

@function flexOpt($key, $overrides: ()) {
   @if (map-has-key($overrides, $key)) {
      @return map-get($overrides, $key);
   }

   @return map-get($fopts, $key);
}



@mixin flexy-item($cols, $overrides:()) {
   @include gutters;
   align-self: flexOpt(align-self, $overrides);
   //flex: flexOpt(flex-grow, $overrides) flexOpt(flex-shrink, $overrides) span($cols of flexOpt(columns, $overrides) no-gutters);
   width: span($cols of flexOpt(columns, $overrides));
}

@mixin flexy-push($cols) {
   @include push($cols of flexOpt(columns, ()));
}

@mixin flexy-pull($cols) {
   @include pull($cols of flexOpt(columns, ()));
}

@mixin flexygrid($list: null) {
   align-content: flexOpt(align-content);
   align-items: flexOpt(align-items);
   display: flex;
   justify-content: flexOpt(justify-content);
   flex-flow: flexOpt(direction) flexOpt(wrap);

     @each $item in $list {
        @include justify($item);
        @include align($item);
        @include content($item);
        @include direction($item);
        @include wrap($item);
     }
}


@mixin justify($item) {
   @if (map-has-key($justifyMap, $item)) {
     justify-content: #{map-get($justifyMap, $item)};
   }
}

@mixin align($item) {
   @if (map-has-key($alignMap, $item)) {
     align-items: #{map-get($alignMap, $item)};
   }
}

@mixin direction($item) {
   @if (map-has-key($directionMap, $item)) {
     flex-direction: #{map-get($directionMap, $item)};
   }
}

@mixin wrap($item) {
   @if (map-has-key($directionMap, $item)) {
     flex-wrap: #{map-get($wrapMap, $item)};
   }
}

@mixin content($item) {
   @if (map-has-key($contentMap, $item)) {
     align-content: #{map-get($contentMap, $item)};
   }
}

 @include layout((
   columns: flexOpt(columns),
   gutter-position: flexOpt(gutter-position),
   gutters: flexOpt(gutters),
   global-box-sizing: border-box
 ));

.f {
  @include flexygrid(center bottom content-fill row wrap);
}

.col {
  border: 1px solid red;
  @include flexy-item(4);
}
