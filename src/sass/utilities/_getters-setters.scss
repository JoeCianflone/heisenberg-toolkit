// A simple function to work with maps, it'll throw an error if the key doesn't
// exist in the map too.
// @param  String $key the value you'd like to pull from the map
// @param  Map    $map the map you're looking in to
// @return String      the value that maps to the key
@function get-by($key, $map) {
   @if map-has-key($map, $key) {
      @return map-get($map, $key);
   } @else {
      @error "Unknown #{$key}";
   }
}

/// I wanted a simple way to always increment/decrement my z-index value
/// @param  Integer $increment: 1  will increase the global z-index by this amount, this number can be negative also
/// @return Integer                the new global z-index value
@function get-zindex($increment: 1) {
   @return $current-zindex + $increment;
}

/// This will strip a unit off a number turning it from a string to a number
/// @param  String $n The string you would like the unit removed from
/// @return Number    The unitless number
@function get-value($n) {
   @return $n / ($n * 0 + 1);
}

/// Pulls the hex code out of the color map
/// @param  String $name the name of the color from your color map
/// @return String       the correct hex code
@function get-color($name) {
   @return get-by($name, $colors);
}

/// Pulls the font-weight number out of the font-weight map
/// @param  String $size font-weight string value
/// @return Number       font-weight value
@function get-font-weight($size) {
   @return get-by($size, $font-weights);
}

/// Pulls the value from the stack map
/// @param  String $setting map name
/// @return String          value from the stack map
@function get-stack($setting) {
   @return get-by($setting, $stack-settings);
}

/// Calculates the correct unitless line-height based on
/// the given font-size and line-height in pixels
/// @param  String $font-size   font-size in pixels
/// @param  String $line-height line-height in pixels
/// @return Number              unitless line-height
@function get-line-height($font-size, $line-height) {
   @return get-value($line-height / $font-size);
}

@function get-breakpoint($name) {
   @return get-by($name, $breakpoints);
}
